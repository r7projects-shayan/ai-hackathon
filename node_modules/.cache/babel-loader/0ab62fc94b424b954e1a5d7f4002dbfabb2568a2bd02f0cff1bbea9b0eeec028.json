{"ast":null,"code":"var _jsxFileName = \"D:\\\\Quixflow\\\\quixflowfinalwork\\\\src\\\\components\\\\Button\\\\index.jsx\";\nimport React from \"react\";\nimport { PropTypes } from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst shapes = {\n  circle: \"rounded-[50%]\",\n  round: \"rounded-[10px]\"\n};\nconst variants = {\n  fill: {\n    cyan_100: \"bg-cyan-100 shadow-bs text-gray-900_01\",\n    cyan_100_01: \"bg-cyan-100_01 text-gray-900_05\",\n    indigo_800: \"bg-indigo-800\",\n    white_A700: \"bg-white-a700\",\n    light_blue_800: \"bg-light_blue-800 text-white-a700\",\n    black_900_02: \"bg-black-900_02 text-white-a700\"\n  }\n};\nconst sizes = {\n  xs: \"h-[32px] px-1\",\n  sm: \"h-[44px] px-[18px] text-lg\",\n  md: \"h-[64px] px-[34px] text-lg\"\n};\nconst Button = ({\n  children,\n  className = \"\",\n  leftIcon,\n  rightIcon,\n  shape,\n  variant = \"fill\",\n  size = \"md\",\n  color = \"black_900_02\",\n  ...restProps\n}) => {\n  var _variants$variant;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: `${className} flex flex-row items-center justify-center text-center cursor-pointer ${shape && shapes[shape] || \"\"} ${size && sizes[size] || \"\"} ${variant && ((_variants$variant = variants[variant]) === null || _variants$variant === void 0 ? void 0 : _variants$variant[color]) || \"\"}`,\n    ...restProps,\n    children: [!!leftIcon && leftIcon, children, !!rightIcon && rightIcon]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 2\n  }, this);\n};\n_c = Button;\nButton.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.node,\n  leftIcon: PropTypes.node,\n  rightIcon: PropTypes.node,\n  shape: PropTypes.oneof([\"circle\", \"round\"]),\n  size: PropTypes.oneof([\"xs\", \"sm\", \"md\"]),\n  variant: PropTypes.oneof([\"fill\"]),\n  color: PropTypes.oneOf([\"cyan_100\", \"cyan_100_01\", \"indigo_800\", \"white_A700\", \"light_blue_800\", \"black_900_02\"])\n};\nexport { Button };\nvar _c;\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"names":["React","PropTypes","jsxDEV","_jsxDEV","shapes","circle","round","variants","fill","cyan_100","cyan_100_01","indigo_800","white_A700","light_blue_800","black_900_02","sizes","xs","sm","md","Button","children","className","leftIcon","rightIcon","shape","variant","size","color","restProps","_variants$variant","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","string","node","oneof","oneOf","$RefreshReg$"],"sources":["D:/Quixflow/quixflowfinalwork/src/components/Button/index.jsx"],"sourcesContent":["import React from \"react\"; \r\nimport {PropTypes} from \"prop-types\";\r\nconst shapes = {\r\n\r\ncircle: \"rounded-[50%]\", \r\nround: \"rounded-[10px]\",\r\n};\r\nconst variants = {\r\n\tfill: {\r\n\tcyan_100: \"bg-cyan-100 shadow-bs text-gray-900_01\", \r\n\tcyan_100_01: \"bg-cyan-100_01 text-gray-900_05\", \r\n\tindigo_800: \"bg-indigo-800\",\r\n\twhite_A700: \"bg-white-a700\",\r\n\tlight_blue_800: \"bg-light_blue-800 text-white-a700\", \r\n\tblack_900_02: \"bg-black-900_02 text-white-a700\",\r\n},\r\n};\r\n\r\n\r\nconst sizes = {\r\n\txs: \"h-[32px] px-1\",\r\n\tsm: \"h-[44px] px-[18px] text-lg\", \r\n\tmd: \"h-[64px] px-[34px] text-lg\",\r\n};\r\n\r\nconst Button = ({\r\n\tchildren,\r\n\tclassName = \"\",\r\n\tleftIcon,\r\n\trightIcon,\r\n\tshape,\r\n\tvariant = \"fill\",\r\n\tsize = \"md\",\r\n\tcolor = \"black_900_02\",\r\n\t...restProps\r\n}) => {\r\n\treturn (\r\n\t<button className={`${className} flex flex-row items-center justify-center text-center cursor-pointer ${(shape && shapes[shape]) || \"\"} ${(size && sizes[size]) || \"\"} ${(variant && variants[variant]?.[color]) || \"\"}`}\r\n{...restProps}\r\n>\r\n\r\n{!!leftIcon && leftIcon} \r\n{children}\r\n{!!rightIcon && rightIcon}\r\n</button>\r\n);\r\n};\r\nButton.propTypes = {\r\nclassName: PropTypes.string, \r\nchildren: PropTypes.node, \r\nleftIcon: PropTypes.node,\r\nrightIcon: PropTypes.node,\r\nshape: PropTypes.oneof ([\"circle\", \"round\"]),\r\nsize: PropTypes.oneof([\"xs\", \"sm\", \"md\"]),\r\nvariant: PropTypes.oneof([\"fill\"]),\r\ncolor: PropTypes.oneOf([\"cyan_100\", \"cyan_100_01\", \"indigo_800\", \"white_A700\", \"light_blue_800\", \"black_900_02\"]), };\r\nexport { Button };"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,SAAS,QAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACrC,MAAMC,MAAM,GAAG;EAEfC,MAAM,EAAE,eAAe;EACvBC,KAAK,EAAE;AACP,CAAC;AACD,MAAMC,QAAQ,GAAG;EAChBC,IAAI,EAAE;IACNC,QAAQ,EAAE,wCAAwC;IAClDC,WAAW,EAAE,iCAAiC;IAC9CC,UAAU,EAAE,eAAe;IAC3BC,UAAU,EAAE,eAAe;IAC3BC,cAAc,EAAE,mCAAmC;IACnDC,YAAY,EAAE;EACf;AACA,CAAC;AAGD,MAAMC,KAAK,GAAG;EACbC,EAAE,EAAE,eAAe;EACnBC,EAAE,EAAE,4BAA4B;EAChCC,EAAE,EAAE;AACL,CAAC;AAED,MAAMC,MAAM,GAAGA,CAAC;EACfC,QAAQ;EACRC,SAAS,GAAG,EAAE;EACdC,QAAQ;EACRC,SAAS;EACTC,KAAK;EACLC,OAAO,GAAG,MAAM;EAChBC,IAAI,GAAG,IAAI;EACXC,KAAK,GAAG,cAAc;EACtB,GAAGC;AACJ,CAAC,KAAK;EAAA,IAAAC,iBAAA;EACL,oBACA1B,OAAA;IAAQkB,SAAS,EAAE,GAAGA,SAAS,yEAA0EG,KAAK,IAAIpB,MAAM,CAACoB,KAAK,CAAC,IAAK,EAAE,IAAKE,IAAI,IAAIX,KAAK,CAACW,IAAI,CAAC,IAAK,EAAE,IAAKD,OAAO,MAAAI,iBAAA,GAAItB,QAAQ,CAACkB,OAAO,CAAC,cAAAI,iBAAA,uBAAjBA,iBAAA,CAAoBF,KAAK,CAAC,KAAK,EAAE,EAAG;IAAA,GACtNC,SAAS;IAAAR,QAAA,GAGZ,CAAC,CAACE,QAAQ,IAAIA,QAAQ,EACtBF,QAAQ,EACR,CAAC,CAACG,SAAS,IAAIA,SAAS;EAAA;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjB,CAAC;AAET,CAAC;AAACC,EAAA,GArBIf,MAAM;AAsBZA,MAAM,CAACgB,SAAS,GAAG;EACnBd,SAAS,EAAEpB,SAAS,CAACmC,MAAM;EAC3BhB,QAAQ,EAAEnB,SAAS,CAACoC,IAAI;EACxBf,QAAQ,EAAErB,SAAS,CAACoC,IAAI;EACxBd,SAAS,EAAEtB,SAAS,CAACoC,IAAI;EACzBb,KAAK,EAAEvB,SAAS,CAACqC,KAAK,CAAE,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;EAC5CZ,IAAI,EAAEzB,SAAS,CAACqC,KAAK,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;EACzCb,OAAO,EAAExB,SAAS,CAACqC,KAAK,CAAC,CAAC,MAAM,CAAC,CAAC;EAClCX,KAAK,EAAE1B,SAAS,CAACsC,KAAK,CAAC,CAAC,UAAU,EAAE,aAAa,EAAE,YAAY,EAAE,YAAY,EAAE,gBAAgB,EAAE,cAAc,CAAC;AAAG,CAAC;AACpH,SAASpB,MAAM;AAAG,IAAAe,EAAA;AAAAM,YAAA,CAAAN,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}